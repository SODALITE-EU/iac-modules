tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - common.yaml

node_types:

  sodalite.nodes.datapipeline.Publisher.S3Bucket:
    derived_from: sodalite.nodes.datapipeline.PipelineBlock.Publisher
    properties:
      template:
        type: string
        description: Name of the template to use. It should match the template filename, e.g. some_template - some_template.xml
        default: PubS3Bucket_Local
      ObjectKey:
        type: string
        default: "${filename}"
      BucketName:
        type: string
      Region:
        type: string
        default: eu-central-1
      AccessKey:
        type: string
      SecretKey:
        type: string
      EndpointOverrideURL:
        type: string
        required: false
        default: ""
        description: Should be set to a URL, if non-AWS services are used. By default AWS S3 will be used
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          configure:
            inputs:
              pipeline_id:              { type: string, default: { get_attribute: [ SELF, pipeline_id ] } }
              ObjectKey:                { type: string, default: { get_property: [ SELF, ObjectKey ] } }
              BucketName:               { type: string, default: { get_property: [ SELF, BucketName ] } }
              Region:                   { type: string, default: { get_property: [ SELF, Region ] } }
              AccessKey:                { type: string, default: { get_property: [ SELF, AccessKey ] } }
              SecretKey:                { type: string, default: { get_property: [ SELF, SecretKey ] } }
              EndpointOverrideURL:      { type: string, default: { get_property: [ SELF, EndpointOverrideURL ] } }
              SchedulingStrategy:       { type: string, default: { get_property: [ SELF, SchedulingStrategy ] } }
              SchedulingPeriodTimer:    { type: string, default: { get_property: [ SELF, SchedulingPeriodTimer ] } }
              SchedulingPeriodCron:     { type: string, default: { get_property: [ SELF, SchedulingPeriodCron ] } }
              NIFI_ENDPOINT:            { type: string, default: { get_input: NIFI_ENDPOINT } }
              NIFI_API_ENDPOINT:        { type: string, default: { get_input: NIFI_API_ENDPOINT } }
              NIFI_API_ACCESS_TOKEN:    { type: string, default: { get_input: NIFI_API_ACCESS_TOKEN } }
              NIFI_API_VALIDATE_CERTS:  { type: boolean, default: { get_input: NIFI_API_VALIDATE_CERTS } }
            implementation:
              primary: playbooks/s3/configure_pub.yaml
    artifacts:
      PubS3Bucket_Template:
        type: tosca.artifacts.File
        file: templates/s3/PubS3Bucket_Local.xml

  sodalite.nodes.datapipeline.Consumer.S3Bucket:
    derived_from: sodalite.nodes.datapipeline.PipelineBlock.Consumer
    properties:
      template:
        type: string
        default: ConS3Bucket_Local
      BucketName:
        type: string
      Region:
        type: string
        default: eu-central-1
      AccessKey:
        type: string
      SecretKey:
        type: string
      EndpointOverrideURL:
        type: string
        required: false
        default: ""
        description: Should be set to a URL, if non-AWS services are used. By default AWS S3 will be used
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          configure:
            inputs:
              pipeline_id:              { type: string, default: { get_attribute: [ SELF, pipeline_id ] } }
              BucketName:               { type: string, default: { get_property: [ SELF, BucketName ] } }
              Region:                   { type: string, default: { get_property: [ SELF, Region ] } }
              AccessKey:                { type: string, default: { get_property: [ SELF, AccessKey ] } }
              SecretKey:                { type: string, default: { get_property: [ SELF, SecretKey ] } }
              EndpointOverrideURL:      { type: string, default: { get_property: [ SELF, EndpointOverrideURL ] } }
              SchedulingStrategy:       { type: string, default: { get_property: [ SELF, SchedulingStrategy ] } }
              SchedulingPeriodTimer:    { type: string, default: { get_property: [ SELF, SchedulingPeriodTimer ] } }
              SchedulingPeriodCron:     { type: string, default: { get_property: [ SELF, SchedulingPeriodCron ] } }
              NIFI_ENDPOINT:            { type: string, default: { get_input: NIFI_ENDPOINT } }
              NIFI_API_ENDPOINT:        { type: string, default: { get_input: NIFI_API_ENDPOINT } }
              NIFI_API_ACCESS_TOKEN:    { type: string, default: { get_input: NIFI_API_ACCESS_TOKEN } }
              NIFI_API_VALIDATE_CERTS:  { type: boolean, default: { get_input: NIFI_API_VALIDATE_CERTS } }
            implementation:
              primary: playbooks/s3/configure_con.yaml
    artifacts:
      ConS3Bucket_Template:
        type: tosca.artifacts.File
        file: templates/s3/ConS3Bucket_Local.xml
