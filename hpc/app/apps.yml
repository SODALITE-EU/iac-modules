tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - runtimes.yml
  - workload_managers.yml

data_types:

  sodalite.datatypes.application.build:
    derived_from: tosca.datatypes.Root
    properties:
      src:
        type: string
      build_command:
        type: string

node_types:

  sodalite.nodes.batch.Container.Application:
    derived_from: tosca.nodes.Root
    properties:
      app_tag:
        type: string
      app_type:
        type: string
      container_runtime:
        type: string
        description: "Format: [private|docker|shub|library]://[repository/]image-name:tags"
      executable:
        type: string
      arguments:
        type: string
        required: false
        default: ""
      mpi_ranks:
        type: integer
        required: false
        default: null
      threads:
        type: integer
        required: false
        default: null
      minimal_efficiency:
        type: float
        required: false
        default: null
      storage_class_pref:
        type: string
        required: false
        default: null
      build:
        type: map
        required: false
        default: null
        entry_schema:
          type: sodalite.datatypes.application.build
    requirements:
      - runtime:
          node: sodalite.nodes.batch.Container.Runtime # only batch_application are allowed; ! ALTERNATIVELY: VIA CAPABILITIES
          capability: tosca.capabilities.Node
          relationship: tosca.relationships.DependsOn
      - host:
          node: tosca.nodes.Compute
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          configure:
            inputs:
              ansible_user: { type: string, default: { get_property: [SELF, host, username] } }
              # ansible_ssh_private_key_file: { type: string, default: { get_property: [SELF, host, ssh-key] } }
              runtime: { type: string, default: { get_property: [SELF, runtime, runtime] } }
              container_runtime: { type: string, default: { get_property: [SELF, container_runtime] } }
              certs_location: { type: string, default: { get_property: [SELF, runtime, certs_location] } }
              private_registry: { type: string, default: { get_property: [SELF, runtime, private_registry] } }
              images_location: { type: string, default: { get_property: [SELF, runtime, images_location] } }
              images_location_full_path: { type: string, default: { get_attribute: [SELF, runtime, images_location_full_path] } }
              puller_image: { type: string, default: { get_property: [SELF, runtime, puller_image] } }
            implementation: 
              primary: playbooks/apps/configure_app_runtime.yml


  sodalite.nodes.batch.Container.BatchExecution:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      content:
        type: string
      workspace:
        type: string
        required: false
        default: ~/
    attributes:
      env:
        type: map
        default: {}
      exec_name:
        type: string
    requirements:
      - application:
          node: sodalite.nodes.batch.Container.Application
          capability: tosca.capabilities.Node
          relationship: tosca.relationships.DependsOn
      - runtime:
          node: sodalite.nodes.batch.Container.Runtime
          capability: tosca.capabilities.Node
          relationship: tosca.relationships.DependsOn
      - host:
          node: tosca.nodes.Compute
          capability: tosca.capabilities.Compute
          relationship: tosca.relationships.HostedOn
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            inputs:
              ansible_user: { type: string, default: { get_property: [SELF, host, username] } }
              # ansible_ssh_private_key_file: { type: string, default: { get_property: [SELF, host, ssh-key] } }
              exec_name: { type: string, default: { get_property: [SELF, application, app_tag] } }
              content: { type: string, default: { get_property: [SELF, content] } }
              workspace: { type: string, default: { get_property: [SELF, workspace] } }
              env: { type: map, default: { get_attribute: [SELF, env] } }
              runtime: { type: string, default: { get_property: [SELF, runtime, runtime] } }
              images_location_full_path: { type: string, default: { get_attribute: [SELF, runtime, images_location_full_path] } }
            implementation: 
              primary: playbooks/apps/create_batch_execution.yml


  sodalite.nodes.batch.Container.JobExecution:
    derived_from: sodalite.nodes.batch.Container.BatchExecution
    properties:
      job_name:
        type: string
      partition:
        type: string
        required: false
        default: null
      queue:
        type: string
        required: false
        default: null
      wall_time_limit:
        type: string
        required: false
        default: null
      node_count:
        type: integer
        required: false
        default: null
      core_count:
        type: integer
        required: false
        default: null
      process_count_per_node:
        type: integer
        required: false
        default: null
      request_gpus:
        type: integer
        required: false
        default: null
      request_specific_nodes:
        type: string
        required: false
        default: null
      standard_output_file:
        type: string
        required: false
        default: null
      standard_error_file:
        type: string
        required: false
        default: null
      combine_stdout_stderr:
        type: boolean
        required: false
        default: null
      copy_environment:
        type: boolean
        required: false
        default: null
      copy_environment_variable:
        type: string
        required: false
        default: null
      request_event_notification:
        type: string
        required: false
        default: null
      email_address:
        type: string
        required: false
        default: null
    requirements:
      - host:
          node: sodalite.nodes.hpc.WM # only WM are allowed
          capability: tosca.capabilities.Compute # Alternatively: via capabilities, e.g. sodalite.capabilities.Batchable
          relationship: tosca.relationships.HostedOn
